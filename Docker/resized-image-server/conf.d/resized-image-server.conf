server {
    listen 80;
    server_name resizer;

    # Redis hostname'ini çözmek için resolver ekledik
    resolver 127.0.0.11 ipv6=off;

    # Cache durumunu yanıt başlıklarına ekleyin
    add_header X-Cache-Status $upstream_cache_status always;

    # Rate limiting ve bağlantı limitlendirme
    limit_req zone=resizing_zone burst=5 nodelay;
    limit_conn conn_limit_per_ip 1;

    location /lua_test {
        default_type 'text/plain';
        content_by_lua_block {
            ngx.say("Lua is working on the resizer!")
        }
    }

    location /images/ {
        # HMAC doğrulama
        access_by_lua_file /etc/nginx/lua/validate_hmac.lua;

        # Cache anahtarını tanımla
        set $cache_key $scheme$host$request_uri;

        content_by_lua_block {
            local cache = require "redis_cache"
            local cache_key = ngx.var.cache_key

            -- Redis cache'den almaya çalış
            local res = cache.get(cache_key)
            if res then
                ngx.header["X-Cache-Status"] = "HIT"
                ngx.header["Content-Type"] = "image/jpeg"
                ngx.print(res)
                return
            end

            -- Cache'de yoksa, resmi al ve yeniden boyutlandır
            local res = ngx.location.capture("/resize_image")

            if res.status ~= 200 then
                ngx.status = res.status
                ngx.say("Error processing image: ", res.body)
                return
            end

            -- Redis'e kaydet
            cache.set(cache_key, res.body, 86400) -- 24 saat cache'le

            ngx.header["X-Cache-Status"] = "MISS"
            ngx.header["Content-Type"] = "image/jpeg"
            ngx.print(res.body)
        }

        # Başlıkları ayarla
        add_header Content-Disposition 'inline; filename=$uri' always;
        add_header Cache-Control "public, max-age=43200" always;
    }

    location /resize_image {
        internal;

        # Orijine isteği yönlendir
        proxy_pass http://origin:5000$request_uri;

        # Resim boyutlandırma
        image_filter resize $validated_width $validated_height;
        image_filter_buffer 10M;

        # İçerik tipi ayarla
        types { }
        default_type image/jpeg;
    }
}
