server {
    listen 80;
    server_name frontend;

    resolver 127.0.0.11 ipv6=off;

    # Include cache status in response headers for debugging
    add_header X-Cache-Status $upstream_cache_status always;

    location /images/ {
        set $cache_key $scheme$host$request_uri;

        content_by_lua_block {
            local cache = require "redis_cache"
            local cache_key = ngx.var.cache_key

            local res = cache.get(cache_key)
            if res then
                ngx.header["X-Cache-Status"] = "HIT"
                ngx.header["Content-Type"] = "image/jpeg" 
                ngx.print(res)
                return
            end

            local res = ngx.location.capture("/fetch_and_cache")
            if res.status ~= 200 then
                ngx.status = res.status
                ngx.say("Error fetching image: ", res.body)
                return
            end

            cache.set(cache_key, res.body, 86400) -- Cache for 24 hours

            ngx.header["X-Cache-Status"] = "MISS"
            ngx.header["Content-Type"] = "image/jpeg"
            ngx.print(res.body)
        }

        # Set headers
        add_header Content-Disposition 'inline; filename=$uri' always;
        add_header Cache-Control "public, max-age=43200" always;
    }

    location /fetch_and_cache {
        internal;

        proxy_pass http://origin:5000$request_uri;

        # Set content type
        types { }
        default_type image/jpeg;
    }
}
